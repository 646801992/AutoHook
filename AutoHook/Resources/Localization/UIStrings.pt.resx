<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DrawHeader_Testing" xml:space="preserve">
    <value>Testando</value>
    <comment>Just a test field - Not being used
</comment>
  </data>
  <data name="default" xml:space="preserve">
    <value>Padrão</value>
  </data>
  <data name="DrawImportExport_Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="ImportStackFromClipboard" xml:space="preserve">
    <value>Importar stack da área de transferência.</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Importar</value>
  </data>
  <data name="PresetName" xml:space="preserve">
    <value>Nome da predefinição</value>
  </data>
  <data name="ImportThisPreset" xml:space="preserve">
    <value>Importar esta predefinição?</value>
  </data>
  <data name="AutoMooch" xml:space="preserve">
    <value>Auto Mooch</value>
  </data>
  <data name="AddLastCatch" xml:space="preserve">
    <value>Adicionar última captura:</value>
  </data>
  <data name="ExportPresetToClipboard" xml:space="preserve">
    <value>Exportar predefinição para área de transferência.</value>
  </data>
  <data name="PresetExportedToTheClipboard" xml:space="preserve">
    <value>Predefinição exportada para área de transferência</value>
  </data>
  <data name="APresetWithTheSameNameAlreadyExists" xml:space="preserve">
    <value>Um preset com o mesmo nome já existe</value>
  </data>
  <data name="PresetAlreadyExist" xml:space="preserve">
    <value>Um preset com o mesmo nome já existe</value>
  </data>
  <data name="CurrentBaitMooch" xml:space="preserve">
    <value>Isca/mooch atual:</value>
  </data>
  <data name="AddCurrentBaitMooch" xml:space="preserve">
    <value>Adicionar Bait/Mooch Atual</value>
  </data>
  <data name="TabPresets_DrawHeader_IsEnabledByDefault" xml:space="preserve">
    <value>é ativado por padrão quando um novo bait/mooch é adicionado </value>
  </data>
  <data name="TabPresets_DrawHeader_CorrectlyEditTheBaitMoochName" xml:space="preserve">
    <value>Certifique-se de editar corretamente o nome da isca/mooch como exibido no jogo (Ex: Versátil Lure)</value>
  </data>
  <data name="NewBaitMooch" xml:space="preserve">
    <value>Novo bait/mooch</value>
  </data>
  <data name="EditMe" xml:space="preserve">
    <value>EditMe</value>
    <comment>Context: Temporary name displayed to the user telling them to edit the field with the wanted Bait or Fish name</comment>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Adicionar</value>
  </data>
  <data name="HoldShiftToDelete" xml:space="preserve">
    <value>Segure SHIFT para excluir.</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Fechar</value>
  </data>
  <data name="RightClickToRename" xml:space="preserve">
    <value>Clique com botão direito para renomear</value>
  </data>
  <data name="TabPresets_DrawHeader_EditPresetNamePressEnterToConfirm" xml:space="preserve">
    <value>Editar nome da predefinição (pressione Enter para confirmar)</value>
  </data>
  <data name="HookPresets" xml:space="preserve">
    <value>Predefinições de Hook</value>
  </data>
  <data name="AddNewPreset" xml:space="preserve">
    <value>Adicionar nova predefinição</value>
  </data>
  <data name="TabPresets_DrawHeader_TabDescription" xml:space="preserve">
    <value>Aqui você pode personalizar qual gancho usar com base na isca atual ou moço.
Se um bait/mooch não for especificado, o comportamento padrão (general Tab) será usado.</value>
  </data>
  <data name="NewPreset" xml:space="preserve">
    <value>Nova predefinição</value>
  </data>
  <data name="TabNameCustomPresets" xml:space="preserve">
    <value>Predefinições personalizadas</value>
  </data>
  <data name="TabNameGPConfig" xml:space="preserve">
    <value>Configuração do GP</value>
  </data>
  <data name="TabGPConfig_TabDescription" xml:space="preserve">
    <value>Aqui você pode personalizar o limite de GP para as ações e itens usados pelo recurso de AutoCast.</value>
  </data>
  <data name="GP" xml:space="preserve">
    <value>PE</value>
  </data>
  <data name="Above" xml:space="preserve">
    <value>Acima</value>
  </data>
  <data name="Below" xml:space="preserve">
    <value>Abaixo</value>
  </data>
  <data name="WillBeUsedWhenYourGPIsEqualOr" xml:space="preserve">
    <value>será usado quando seu PG for igual ou</value>
    <comment>Action will be used when your GP is Equal or Above/Below</comment>
  </data>
  <data name="None" xml:space="preserve">
    <value>Nenhum</value>
  </data>
  <data name="TabnameGeneral" xml:space="preserve">
    <value>Geral</value>
  </data>
  <data name="DrawHeader_GeneralSettings" xml:space="preserve">
    <value>Configurações gerais</value>
  </data>
  <data name="DrawHeader_CheckChangelog" xml:space="preserve">
    <value>Verifique as novas alterações no log de alterações abaixo</value>
  </data>
  <data name="DrawHeader_ClickToReportAnIssue" xml:space="preserve">
    <value>Clique aqui para relatar um problema ou fazer uma sugestão</value>
  </data>
  <data name="UseDefaultCast" xml:space="preserve">
    <value>Usar o CSS padrão</value>
  </data>
  <data name="UseDefaultMooch" xml:space="preserve">
    <value>Usar Mooch Padrão</value>
  </data>
  <data name="DefaultHookingBehavior" xml:space="preserve">
    <value>Este é o comportamento padrão do hooking se nenhuma predefinição personalizada for encontrada.</value>
  </data>
  <data name="DefaultMoochingBehavior" xml:space="preserve">
    <value>Este é o comportamento padrão se nenhuma predefinição for encontrada.</value>
  </data>
  <data name="Changelog" xml:space="preserve">
    <value>Registro de alterações</value>
  </data>
  <data name="DefaultCast" xml:space="preserve">
    <value>Usar o CSS padrão</value>
  </data>
  <data name="DefaultMooch" xml:space="preserve">
    <value>Usar Mooch Padrão</value>
  </data>
  <data name="HookWeakExclamation" xml:space="preserve">
    <value>Hook Weak (!)</value>
  </data>
  <data name="HookStrongExclamation" xml:space="preserve">
    <value>Gancho Forte (!!)</value>
  </data>
  <data name="HookLegendaryExclamation" xml:space="preserve">
    <value>Lendário do Hook (!!!)</value>
  </data>
  <data name="HookWillBeUsedIfPatienceIsNotUp" xml:space="preserve">
    <value>"Hook" será usado se a paciência não estiver alta</value>
  </data>
  <data name="PrecisionHookset" xml:space="preserve">
    <value>Precision Hookset</value>
  </data>
  <data name="PowerfulHookset" xml:space="preserve">
    <value>Hookset poderoso</value>
  </data>
  <data name="MoochBaitName" xml:space="preserve">
    <value>Nome do Mooch/Isca</value>
  </data>
  <data name="BaitAlreadyExists" xml:space="preserve">
    <value>Esse nome já existe</value>
  </data>
  <data name="MaxWait" xml:space="preserve">
    <value>Máx. Esperar</value>
    <comment>Maximum time to wait</comment>
  </data>
  <data name="HelpMarkerMaxWaitTimer" xml:space="preserve">
    <value>O gancho será usado após a quantidade de tempo definida ter passado
Min. tempo: 2s (por causa do bloqueio de animação)

Defina Zero (0) para desativar e não fazer isso menor que o Min. Espere</value>
  </data>
  <data name="MinWait" xml:space="preserve">
    <value>Máx. Esperar</value>
  </data>
  <data name="HelpMarkerMinWaitTimer" xml:space="preserve">
    <value>Hook will NOT be used until the minimum time has passed.

Ex: If you set the number as 14 and something bites after 8 seconds, the fish will not to be hooked

Set Zero (0) to disable</value>
  </data>
  <data name="StopFishingAfter" xml:space="preserve">
    <value>Parar de pescar depois...</value>
  </data>
  <data name="StopFishing" xml:space="preserve">
    <value>Parar de Pescar</value>
  </data>
  <data name="AfterBeingCaught" xml:space="preserve">
    <value>Depois de ser pego...</value>
  </data>
  <data name="AfterBeingCaughtDescription" xml:space="preserve">
    <value>- Se esta configuração é uma isca: Pára a pesca após X quantidades de peixe é capturado
- Se esta configuração é um peixe: Pára a pesca após ser pego X vezes</value>
  </data>
  <data name="TimeS" xml:space="preserve">
    <value>vez(es)</value>
    <comment>Quantity, example: 5 Time(s) </comment>
  </data>
  <data name="SurfaceSlapIdenticalCast" xml:space="preserve">
    <value>Laje de Superfície &amp; Transmissão Identica</value>
  </data>
  <data name="OverridesIdenticalCast" xml:space="preserve">
    <value>Sobrescreve elenco idêntico</value>
  </data>
  <data name="OverridesSurfaceSlap" xml:space="preserve">
    <value>Sobrepor Superfície</value>
  </data>
  <data name="UseSurfaceSlap" xml:space="preserve">
    <value>Tapa de Superfície</value>
  </data>
  <data name="UseIdenticalCast" xml:space="preserve">
    <value>Elenco idêntico</value>
  </data>
  <data name="UseMoochII" xml:space="preserve">
    <value>Usar Mooch II</value>
  </data>
  <data name="OnlyUseWhenFisherSIntutionIsActive" xml:space="preserve">
    <value>Só use quando a Intuição do Pescador estiver ativa</value>
  </data>
  <data name="AutoMoochPresetDescription" xml:space="preserve">
    <value>- Se isto é uma Isca (Ex: Versátil Lure), todos os peixes capturados por esta isca ficarão Queimados
- Se isto é um Peixe/Mooch (Ex: Herring do Harbor), vai ser moído quando capturado
- Se esta opção estiver desativada, o peixe NÃO será temperado mesmo que Auto Mooch esteja ativado na aba geral</value>
  </data>
  <data name="AutoMoochPresetHelpMarker" xml:space="preserve">
    <value>Esta opção tem prioridade sobre a linha de transmissão automática</value>
  </data>
  <data name="FisherSIntuitionSettings" xml:space="preserve">
    <value>Configurações de Intuição do Pescador</value>
  </data>
  <data name="FisherSIntuitionSettingsHelpMarker" xml:space="preserve">
    <value>Ativar Hooks Personalizados quando a Intuição do Pescador for detectada</value>
  </data>
  <data name="HoldShiftBothDHTH" xml:space="preserve">
    <value>Segure SHIFT para selecionar Hook Duplo e Triplo (não recomendado)</value>
  </data>
  <data name="UseDoubleHookIfGp400" xml:space="preserve">
    <value>Usar Gancho Duplo (Se gp &gt; 400)</value>
  </data>
  <data name="UseTripleHookIfGp700" xml:space="preserve">
    <value>Usar Gancho Triplo (Se gp &gt; 700)</value>
  </data>
  <data name="UseWhenPatienceIsActiveNotRecommended" xml:space="preserve">
    <value>Usar quando a paciência estiver ativa (não recomendado)</value>
  </data>
  <data name="DHTHPatienceHelpMarker" xml:space="preserve">
    <value>Importante!!!

Se desativado, o hook Precisão/Poderoso será usado quando a paciência acabar.</value>
  </data>
  <data name="LetTheFishEscape" xml:space="preserve">
    <value>Deixe o peixe escapar se o GP estiver abaixo do necessário</value>
  </data>
  <data name="OnlyUseWhenIdenticalCastIsActive" xml:space="preserve">
    <value>Use apenas quando o Elenco Identico estiver ativo</value>
  </data>
  <data name="DoubleTripleHookSettings" xml:space="preserve">
    <value>Configurações de Gancho Dupla/Triplo</value>
  </data>
  <data name="EnabledConfigArrow" xml:space="preserve">
    <value>Configuração Habilitada -&gt;</value>
  </data>
  <data name="EnabledConfigArrowhelpMarker" xml:space="preserve">
    <value>Important!!!

If disabled, the fish will NOT be hooked or Mooched.
To use the default behavior (General Tab), please delete this configuration.</value>
  </data>
  <data name="ChumTimer" xml:space="preserve">
    <value>Chum Timer</value>
  </data>
  <data name="EnableChumTimers" xml:space="preserve">
    <value>Ativar temporizadores de chum</value>
  </data>
  <data name="EnableChumTimersHelpMarker" xml:space="preserve">
    <value>Habilitar Mín/Max tempos quando sob o efeito do Chum</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>Habilitado</value>
  </data>
  <data name="TabNameAutoGig" xml:space="preserve">
    <value>AutoGig</value>
  </data>
  <data name="TabAutoGigDescription" xml:space="preserve">
    <value>Trata-se de uma característica experimental e pode ter falta de peixe. Se você achar que está faltando demais tente ajustar a escala da janela de Pesca em algo diferente</value>
  </data>
  <data name="EnableAutoGig" xml:space="preserve">
    <value>Ativar Hook Automático</value>
  </data>
  <data name="HideOverlayDuringSpearfishing" xml:space="preserve">
    <value>Esconder sobreposição na Lanceira</value>
  </data>
  <data name="AutoGigHideOverlayHelpMarker" xml:space="preserve">
    <value>Só será ocultado se a opção AutoGig estiver desativada</value>
  </data>
  <data name="DrawFishHitbox" xml:space="preserve">
    <value>Desenhar caixa de peixe</value>
  </data>
  <data name="DrawFishHitboxHelpMarker" xml:space="preserve">
    <value>A caixa de acerto é sua única disponível para os peixes do Tamanho e Velocidade selecionados</value>
  </data>
  <data name="DrawGigHitbox" xml:space="preserve">
    <value>Desenhar caixa de peixe</value>
  </data>
  <data name="SelectTheSizeAndSpeed" xml:space="preserve">
    <value>Selecione o Tamanho e Velocidade do peixe que você quiser (sobreposição de Lança do Gatherbuddy's ajuda muito)</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Tamanho</value>
  </data>
  <data name="Speed" xml:space="preserve">
    <value>Velocidade</value>
  </data>
  <data name="AutoCastCordialPriority" xml:space="preserve">
    <value>Alterar prioridade: Desejado-Cordial &gt; Cordial &gt; HI-Cordiais</value>
  </data>
  <data name="AutoCastCordialPriorityHelpMarker" xml:space="preserve">
    <value>Se não houver Cordiais, Hi-Cordiais serão usados em vez disso</value>
  </data>
  <data name="AutoCastUseCordial" xml:space="preserve">
    <value>Usar Cordiais (Hi-Cordial primeiro)</value>
  </data>
  <data name="AutoCastUseCordialHelpMarker" xml:space="preserve">
    <value>Se não houver Cordiais, Hi-Cordiais serão usados em vez disso</value>
  </data>
  <data name="AutoCastUseFishEyes" xml:space="preserve">
    <value>Use olhos de peixe</value>
  </data>
  <data name="CancelsCurrentMooch" xml:space="preserve">
    <value>Cancela o Mooch atual</value>
  </data>
  <data name="AutoCastUseChum" xml:space="preserve">
    <value>Usar Chum</value>
  </data>
  <data name="AutoCastExtraOptionPrizeCatch" xml:space="preserve">
    <value>Somente use quando Mooch II estiver indisponível - READ &gt;&gt;&gt;</value>
  </data>
  <data name="ExtraOptionPrizeCatchHelpMarker" xml:space="preserve">
    <value>&gt;Certifique-se de 'Usar Mooch II' está ativado ou senão não funcionará&lt;
Isso poderia salvá-lo 100gp se fosse somente para mooches</value>
  </data>
  <data name="Test" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="Enable_AutoHook" xml:space="preserve">
    <value>Ativar Hook Automático</value>
  </data>
  <data name="Plugin_Enabled" xml:space="preserve">
    <value>Plugin ativado</value>
  </data>
  <data name="Plugin_Disabled" xml:space="preserve">
    <value>Plugin Desativado</value>
  </data>
  <data name="Plugin_Name_Settings" xml:space="preserve">
    <value>Configurações de {0}</value>
  </data>
  <data name="PluginUi_Draw_Enables_Disables" xml:space="preserve">
    <value>Habilita/Desabilita o plugin para você</value>
  </data>
  <data name="Using_Chum_Timer" xml:space="preserve">
    <value>Usando temporizador de chum</value>
  </data>
  <data name="Disables_AutoHook" xml:space="preserve">
    <value>Ativar Hook Automático</value>
  </data>
  <data name="AutoHook_Disabled" xml:space="preserve">
    <value>Hook Automático Desativado</value>
  </data>
  <data name="AutoHook_Enabled" xml:space="preserve">
    <value>Hook Automático habilitado</value>
  </data>
  <data name="Enables_AutoHook" xml:space="preserve">
    <value>Ativar Hook Automático</value>
  </data>
  <data name="Opens_Config_Window" xml:space="preserve">
    <value>Abre janela de configuração</value>
  </data>
  <data name="TabAutoCasts_When_Stack_Equals" xml:space="preserve">
    <value>Quando pilhas = </value>
  </data>
  <data name="Use_Prize_Catch" xml:space="preserve">
    <value>Usar captura de prêmio</value>
  </data>
  <data name="Use_Prize_Catch_HelpText" xml:space="preserve">
    <value>Cancela o Mool atual. A paciência e o Isca da Makeshift não serão usadas quando a Coleta de Prêmios estiver ativa</value>
  </data>
  <data name="Toggles_AutoHook_On_Off" xml:space="preserve">
    <value>Liga/desliga Hook Automático</value>
  </data>
  <data name="Triple_Hook" xml:space="preserve">
    <value>Gancho Triplo</value>
  </data>
  <data name="Watered_Cordial" xml:space="preserve">
    <value>Cordial Ferido</value>
  </data>
  <data name="Cordial" xml:space="preserve">
    <value>Cordial</value>
  </data>
  <data name="HQ_Cordial" xml:space="preserve">
    <value>HQ Cordial</value>
  </data>
  <data name="HQ_Watered_Cordial" xml:space="preserve">
    <value>Cordial Ferido</value>
  </data>
  <data name="Double_Hook" xml:space="preserve">
    <value>Gancho Duplo</value>
  </data>
  <data name="Patience_II" xml:space="preserve">
    <value>Patience II</value>
  </data>
  <data name="Hi_Cordial" xml:space="preserve">
    <value>Hq Cordial</value>
  </data>
  <data name="Patience_I" xml:space="preserve">
    <value>Patience II</value>
  </data>
  <data name="Prize_Catch" xml:space="preserve">
    <value>Usar captura de prêmio</value>
  </data>
  <data name="Surface_Slap" xml:space="preserve">
    <value>Tapa de Superfície</value>
  </data>
  <data name="Identical_Cast" xml:space="preserve">
    <value>Elenco idêntico</value>
  </data>
  <data name="Fish_Eyes" xml:space="preserve">
    <value>Olho de peixe:</value>
  </data>
  <data name="Chum" xml:space="preserve">
    <value>Chum</value>
  </data>
  <data name="Thaliaks_Favor" xml:space="preserve">
    <value>Favor do Thaliak</value>
  </data>
  <data name="MakeShift_Bait" xml:space="preserve">
    <value>Isca MakeShift</value>
  </data>
  <data name="BaitName_Default" xml:space="preserve">
    <value>Padrão</value>
  </data>
  <data name="DecompressString_Invalid_Import" xml:space="preserve">
    <value>Esta não é uma imagem válida!</value>
  </data>
  <data name="New_Preset" xml:space="preserve">
    <value>Nova predefinição</value>
  </data>
  <data name="Auto_Casts" xml:space="preserve">
    <value>Transmissões Automáticas</value>
  </data>
  <data name="TabAutoCasts_DrawAutoCast_HelpText" xml:space="preserve">
    <value>Transmitir (FSH ação) será usado após uma mordida

IMPORTANTE!!!
Se Auto Mooch (Predefinição Global ou Personalizada) não estiver ativada, a linha será transmitida normalmente e você perderá sua oportunidade mooch (Se disponível)</value>
  </data>
  <data name="Global_Auto_Cast_Line" xml:space="preserve">
    <value>Linha Global de Transporte Automático</value>
  </data>
  <data name="Use_Thaliaks_Favor" xml:space="preserve">
    <value>Favor do Thaliak</value>
  </data>
  <data name="Use_Natures_Bounty" xml:space="preserve">
    <value>Usar Incentivo da Natureza</value>
  </data>
  <data name="Enable_AutoGig" xml:space="preserve">
    <value>Ativar Hook Automático</value>
  </data>
  <data name="Hitbox" xml:space="preserve">
    <value>Hitbox</value>
  </data>
  <data name="Use_Makeshift_Bait" xml:space="preserve">
    <value>Use Makeshift Bait</value>
  </data>
  <data name="TabAutoCasts_DrawMakeShiftBait_HelpText" xml:space="preserve">
    <value>This might conflict with Auto Thaliak's Favor</value>
  </data>
  <data name="TabAutoCasts_DrawExtraOptionsThaliaksFavor_" xml:space="preserve">
    <value>When Stacks =</value>
  </data>
  <data name="TabAutoCasts_DrawThaliaksFavor_HelpText" xml:space="preserve">
    <value>This might conflict with Auto MakeShift Bait</value>
  </data>
  <data name="Use_Patience_I_II" xml:space="preserve">
    <value>Use Patience I/II</value>
  </data>
  <data name="TabAutoCasts_DrawPatience_HelpText" xml:space="preserve">
    <value>Patience I/II will be used when your current GP is equal (or higher) to the action cost +20 (Ex: 220 for I, 580 for II), this helps to avoid not having GP for the hooksets</value>
  </data>
  <data name="TabAutoCasts_DrawExtraOptionsPatience" xml:space="preserve">
    <value>Use when Makeshift Bait is active</value>
  </data>
  <data name="Enable_Auto_Casts" xml:space="preserve">
    <value>Enable Auto Casts</value>
  </data>
  <data name="Dont_Cancel_Mooch" xml:space="preserve">
    <value>Don't Cancel Mooch</value>
  </data>
  <data name="TabAutoCasts_DrawHeader_HelpText" xml:space="preserve">
    <value>Actions that cancel mooch wont be used (e.g. Chum, Fish Eyes, Prize Catch etc.)</value>
  </data>
  <data name="TabAutoCasts_DrawExtraOptionsAutoMooch_Extra_Only_Active" xml:space="preserve">
    <value>Only use when Fisher's Intuition is active</value>
  </data>
  <data name="Use_Mooch_II" xml:space="preserve">
    <value>Use Mooch II</value>
  </data>
  <data name="Global_Auto_Mooch" xml:space="preserve">
    <value>Global Auto Mooch</value>
  </data>
  <data name="TabAutoCasts_DrawHeader_Guide_Collectables" xml:space="preserve">
    <value>Guide: How to auto accept Collectables</value>
  </data>
  <data name="TabAutoCasts_DrawAutoMooch_HelpText" xml:space="preserve">
    <value>This option have priority over Auto Cast Line

If you want to Auto Mooch only a specific fish and ignore others, disable this option and create a Custom Preset.</value>
  </data>
  <data name="Support_me_on_Ko_fi" xml:space="preserve">
    <value>Support me on Ko-fi</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="Incomplete" xml:space="preserve">
    <value>Incomplete</value>
  </data>
  <data name="AutoHook" xml:space="preserve">
    <value>AutoHook</value>
  </data>
</root>